name: deploy

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
    paths-ignore:
      - "**/README.md"
      - "**/LICENSE"
      - "**/.gitignore"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    outputs:
      artifacts: ${{ needs.build.outputs.artifacts }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Install Cargo Lambda
        run: cargo install cargo-lambda

      - name: Cache Cargo Dependencies
        uses: actions/cache@v2
        with:
          path: |
            lambda-api/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('lambda-api/Cargo.lock') }}

      - name: Build Lambda Project
        run: cargo lambda build --release --manifest-path=lambda-api/Cargo.toml

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: lambda-zip
          path: lambda-api/target/lambda/lambda-api/bootstrap.zip

  deploy:
    name: Deploy to AWS
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: lambda-zip

      - name: Prepare Terraform
        run: |
          cd terraform
          terraform init

      - name: Apply Terraform Changes
        run: |
          cd terraform
          terraform apply -auto-approve
